name: CICD for Serverless Application
run-name: ${{ github.actor }} is doing CICD for Serverless Application

on:
  push:
    branches: [ main, "*" ]

jobs:
  pre-deploy: #job name(can be any name,which will appear on the github action page/pipeline)
    runs-on: ubuntu-latest
    steps:
      - run: echo "The job is automatically triggerd by a ${{ github.event_name }} event."

  install-dependencies:
    runs-on: ubuntu-latest
    needs: pre-deploy
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies command
        run: npm install

  unit-testing:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies command
        run: npm install
      - name: Run unit testing command
        run: npm run test

  vulnerability-scan-1:
    runs-on: ubuntu-latest
    needs: unit-testing
    steps:
      - name: Checkout repo code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install
      - name: Run NPM Audit
        run: npm audit

  vulnerability-scan-2:
    runs-on: ubuntu-latest
    needs: unit-testing
    steps:
      - name: Checkout repo code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm install
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --severity-threshold=high
          
  deploy:
    runs-on: ubuntu-latest
    needs: unit-testing
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - name: Serverless deploy to AWS
        uses: serverless/github-action@master
        with:
          args: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Retrieve secret from AWS
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: |
            pglim360*
        env:
          AWS_REGION: ap-southeast-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Show My Secrets
        run: |
          for var in $(env | grep '^PGLIM360_'); do
            echo "Variable: $var"
          done

  post-deploy-monitor:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout repo code
        uses: actions/checkout@v3
      - name: Run Snyk to monitor vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
#
